@mixin P {
  p,
  .P {
    font-size: var(--sl-font-size-small);
    color: var(--sqm-text);
    margin-top: 0px;

    &.Subtitle {
      color: var(--sqm-text-subdued);
      margin: 0px;
    }
  }
}

@mixin Column {
  .Column {
    display: flex;
    flex-direction: column;
    & > :not(:first-child) {
      margin-top: var(--sl-spacing-medium);
    }
  }
}

@mixin SeparateContent {
  .SeparateContent {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
}

@mixin ErrorStyles {
  .ErrorStyles {
    &::part(base) {
      background: var(--sl-color-danger-10);
      border-color: var(--sl-color-danger-500);
      outline: var(--sl-color-danger-500);
    }

    &:host {
      --something-random: red;
      --focus-ring: 0 0 0 var(--sl-focus-ring-width) red !important;
    }

    &::part(input) {
      color: var(--sl-color-danger-500);
      &:-webkit-autofill,
      &:-webkit-autofill:hover,
      &:-webkit-autofill:focus,
      &:-webkit-autofill:active {
        box-shadow: 0 0 0 var(--sl-input-height-large)
          var(--sl-input-background-color-hover) inset !important;
        -webkit-text-fill-color: var(--sl-color-danger-500);
      }
    }

    &::part(help-text) {
      color: var(--sl-color-danger-500);
    }
  }
}

@mixin Wrapper {
  .Wrapper {
    box-sizing: border-box;
    width: 100%;
    max-width: var(--sqm-content-max-width);
    height: auto;
    padding: var(--sl-spacing-large);
    background-color: var(--sqm-content-background);
    display: flex;
    word-wrap: break-word;
  }
}

@mixin HostBlock {
  :host {
    display: block;
  }
  :host([hidden]) {
    display: none;
  }
}
